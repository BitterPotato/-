#include "UnityCG.cginc"
#include "AutoLight.cginc"
#include "Lighting.cginc"
#include "MiunaCG.cginc"

sampler2D _DiffuseTex;
float4 _DiffuseTex_ST;

sampler2D _SpecularTex;
float4 _SpecularTex_ST;

sampler2D _DiffuseRamp;
float _DiffuseVert;

sampler2D _SpecularRamp;
float _SpecularVert;

#ifdef ENVRIMLIGHT
samplerCUBE _EnvMap;
fixed _FresnelScale;
#endif

#ifdef AO
sampler2D _AOTex;
fixed _AORatio;
#endif

struct v2f_base
{
	float4 pos : SV_POSITION;
	float4 texcoord : TEXCOORD0;
	float3 worldNormal : TEXCOORD2;
	float3 worldPos : TEXCOORD3;
	SHADOW_COORDS(4)
};

v2f_base vert_base(appdata_base v)
{
	v2f_base o;
	o.pos = UnityObjectToClipPos(v.vertex);
	o.worldNormal = normalize(mul(unity_ObjectToWorld, v.normal));
	o.worldPos = mul(unity_ObjectToWorld, v.vertex);

	o.texcoord.xy = TRANSFORM_TEX(v.texcoord.xy, _DiffuseTex);
	o.texcoord.zw = TRANSFORM_TEX(v.texcoord.xy, _SpecularTex);

	#ifdef CAST_SHADOW
	TRANSFER_SHADOW(o);
	#endif

	return o;
}


fixed4 frag_base_add(v2f_base i) : SV_Target
{
	fixed3 worldViewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));
	fixed3 worldLightDir = normalize(UnityWorldSpaceLightDir(i.worldPos));
	fixed3 worldNormal = normalize(i.worldNormal);
	#ifdef ENVRIMLIGHT
	fixed3 worldRefl = reflect(-worldViewDir, worldNormal);
	#endif

	fixed3 combinedColor = fixed3(0.0, 0.0, 0.0);

	#ifdef AO
	// ambient
	fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;
	combinedColor += ambient * tex2D(_AOTex, i.texcoord.xy) * _AORatio;
	#endif

	// diffuse ramp
	fixed nl = halfLambert(dot(i.worldNormal, worldLightDir));
	fixed nv = dot(i.worldNormal, worldViewDir);
	fixed rampU = 1 - min(nl, nv);
	fixed3 diffuseRamp = tex2D(_DiffuseRamp, fixed2(rampU, _DiffuseVert));

	fixed3 diffuse = tex2D(_DiffuseTex, i.texcoord.xy).rgb;
	fixed3 rampDiffuse = diffuse * diffuse;
	rampDiffuse.b += diffuseRamp.b;
	// combinedColor += diffuse * diffuseRamp.rgb;
	combinedColor += lerp(rampDiffuse, diffuse, diffuseRamp) * _LightColor0.rgb;

	#ifdef SPECULAR
	// specular ramp
	fixed3 halfDir = normalize(worldViewDir + worldLightDir);
	fixed phong = max(0, pow(dot(halfDir, worldNormal), 5));
	fixed4 specularRamp = tex2D(_SpecularRamp, fixed2(1 - phong, _SpecularVert));

	fixed3 specular = tex2D(_SpecularTex, i.texcoord.zw).rgb;
	// combinedColor += specular * specularRamp.rgb;
	combinedColor += specular * pow(specularRamp.rgb, 25) * _LightColor0.rgb;
	#endif

	#ifdef ENVRIMLIGHT
	fixed fresnel = _FresnelScale + (1 - _FresnelScale) * pow(1 - dot(worldViewDir, worldNormal), 5);
	combinedColor += saturate(fresnel) * texCUBE(_EnvMap, worldRefl).rgb;
	#endif

	#ifdef CAST_SHADOW
	UNITY_LIGHT_ATTENUATION(atten, i, i.worldPos);
	// combinedColor = lerp(pow(combinedColor, 1), combinedColor, atten);
	// combinedColor *= atten;
	// combinedColor = fixed3(atten, atten, atten);
	#endif
		
	// the alpha aisle not in use right now
	return fixed4(combinedColor, 1.0);
}

fixed4 frag_base_base(v2f_base i) : SV_Target
{
	return frag_base_add(i);
}